---
import '../styles/global.css'
import '../styles/chapter.css'

import { CollectionEntry, getCollection, getEntryBySlug } from 'astro:content'
import TOCList from '../components/TOCList.astro'
import SEO from '../components/SEO.astro'
import ExternalNav from '../components/ExternalNav.astro'
import ColoredTitle from '../components/ColoredTitle.astro'
import EditButton from '../components/EditButton.astro'
import ScrollPadding from '../components/ScrollPadding.astro'
import OldNav from '../components/OldNav.astro'

const baseUrl = import.meta.env.BASE_URL && import.meta.env.BASE_URL !== '/' ? `${import.meta.env.BASE_URL}/` : '/'

export interface Params {
	slug: CollectionEntry<'chapters'>['slug']
}

const chapter = await getEntryBySlug('chapters', Astro.params.slug)
const { Content, headings } = await chapter.render()

const allChapters = await getCollection('chapters')
const prevChapter = allChapters
	.find(otherChapter => otherChapter.data.chapter === chapter.data.chapter - 1)
const nextChapter = allChapters
	.find(otherChapter => otherChapter.data.chapter === chapter.data.chapter + 1)

export async function getStaticPaths() {
	const chapters = await getCollection('chapters')
	return chapters
		.filter(chapter => chapter.data.chapter !== 0) // Skip the intro
		.map(chapter => ({ params: { slug: chapter.slug } }))
}
---

<html lang='fa' dir='rtl'>
<head>
	<meta charset='utf-8' />
	<meta name='viewport' content='width=device-width, initial-scale=1' />
	<base href={baseUrl} />
	<script>
		document.addEventListener('click', (e) => {
		const a = e.target.closest('a[href^="#"]');
		if (!a) return;
		e.preventDefault();
		const id = a.getAttribute('href').slice(1);
		document.getElementById(id)?.scrollIntoView();
		history.replaceState(null, '', '#' + id);
		});
	</script>

	<link href="https://cdn.jsdelivr.net/gh/rastikerdar/vazirmatn@v33.003/Vazirmatn-font-face.css" rel="stylesheet" type="text/css" />
	<link href="https://cdn.jsdelivr.net/gh/rastikerdar/vazir-code-font@v1.1.2/dist/font-face.css" rel="stylesheet" type="text/css" />

	<SEO chapterSlug={chapter.slug} />
	<script defer data-domain='cpu.land' src='https://plausible.io/js/script.js' />
</head>
<body>
	<ExternalNav currentChapterSlug={chapter.slug} />

	<nav class='internal'>
		<h2>فهرست فصل</h2>
		
		<TOCList headings={[
			{ depth: 2, text: 'مقدمه', slug: 'intro' },
			...headings
		]} />

		<div class='navigation'>
			{prevChapter ? (
				<a href={prevChapter.data.chapter === 0 ? '' : prevChapter.slug}>
					<span aria-hidden='true'>&laquo;</span>
					<span class='sr-only'>قبلی:</span>
					{prevChapter.data.chapter === 0 ? 'مقدمه' : `فصل ${prevChapter.data.chapter}`}
				</a>
			) : null}
			{nextChapter ? (
				<a href={nextChapter.slug}>
					<span class='sr-only'>بعدی:</span>
					{nextChapter.data.chapter === 0 ? 'مقدمه' : `فصل ${nextChapter.data.chapter}`}
					<span aria-hidden='true'>&raquo;</span>
				</a>
			) : null}
		</div>
	</nav>

	<main>
		<header class='content'>
			<h1 id='intro'>
				<div class='chapter'>فصل {chapter.data.chapter}<span class='sr-only'>:</span></div>
				<div class='title'>
					{chapter.data.title}
					<EditButton chapterSlug={chapter.slug} />
				</div>
			</h1>
		</header>

		<div class='you-are-here'>
			<div class='content'>
				<p>بخشی از <a href='' style='--color: transparent;'><ColoredTitle /></a>: کاوشی عمیق در نحوهٔ اجرای برنامه‌ها توسط کامپیوتر شما.</p>
				<OldNav chapterSlug={chapter.slug} />
			</div>
		</div>

		<div class='content'>
			<Content />

			{nextChapter ? (
				<a class='continue' href={nextChapter.slug}>
					ادامه خواندن توی فصل {nextChapter.data.chapter}: {nextChapter.data.title} <span aria-hidden='true'>&raquo;</span>
				</a>
			) : null}
		</div>

		<ScrollPadding />
	</main>

	<script define:vars={{ dev: import.meta.env.DEV }}>
		window.__ASTRO_DEV_MODE__ = dev
	</script>
	<script>
		const scrollRestoreKey = `scroll-restore-${window.location.pathname}`

		// Scrollspy
		const leeway = 80
		const container = document.querySelector('main')
		const headings = [ ...document.querySelectorAll('h1, h2, h3, h4, h5, h6') ]
			.filter(el => !!el.id)
		headings.reverse()

		let current = 'intro'
		const updateScrollspy = () => {
			for (const el of document.querySelectorAll('[data-scrollspy]')) {
				el.classList.toggle('scrollspy-active', el.dataset.scrollspy === current)
			}
		}
		
		container.addEventListener('scroll', () => {
			let next = 'intro'
			for (const heading of headings) {
				if (container.scrollTop >= heading.offsetTop - leeway) {
					next = heading.id
					break
				}
			}
			if (next !== current) {
				current = next
				updateScrollspy()
			}

			if (window.__ASTRO_DEV_MODE__) {
				sessionStorage.setItem(scrollRestoreKey, container.scrollTop.toString())
			}
		}, { passive: true })

		updateScrollspy()

		// Restore scroll for live reloading
		setTimeout(() => {
			if (window.__ASTRO_DEV_MODE__ && sessionStorage.getItem(scrollRestoreKey)) {
				container.scrollTop = parseInt(sessionStorage.getItem(scrollRestoreKey))
			}
		}, 0)
	</script>
</body>
</html>
